# Generated by Django 5.2.6 on 2025-09-18 11:40

from django.db import migrations, models, connection


def drop_cart_shared_if_exists(apps, schema_editor):
    table = 'store_cart'
    col = 'cart_shared'
    with connection.cursor() as cursor:
        cursor.execute(
            "SELECT COUNT(*) FROM information_schema.COLUMNS WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME=%s AND COLUMN_NAME=%s",
            [table, col],
        )
        row = cursor.fetchone()
        if not row or not row[0]:
            return
        cursor.execute(f"ALTER TABLE `{table}` DROP COLUMN `{col}`;")


class Migration(migrations.Migration):

    dependencies = [
        ('store', '0012_alter_product_collection'),
    ]

    operations = [
        # Conditional drop for cart_shared (safe if it was already removed earlier)
        migrations.RunPython(drop_cart_shared_if_exists, migrations.RunPython.noop),

        # The original migration attempted to remove 'Collection' field and re-add 'collection'.
        # The DB already contains the correct column and constraints, so update the migration
        # state only to include the 'collection' field without performing DDL.
        migrations.SeparateDatabaseAndState(
            database_operations=[
                # Use a Python no-op instead of empty SQL comment to avoid MySQL 'Query was empty'
                migrations.RunPython(lambda apps, schema_editor: None),
            ],
            state_operations=[
                migrations.AddField(
                    model_name='product',
                    name='collection',
                    field=models.ForeignKey(blank=True, null=True, on_delete=models.deletion.PROTECT, related_name='products', to='store.collection'),
                ),
            ],
        ),
    ]
